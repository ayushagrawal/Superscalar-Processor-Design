library ieee;
use ieee.std_logic_1164.all;
use ieee.math_real.all;
use ieee.numeric_std.all;

library work;
use work.components.all;

entity multiplexer is
	generic(X : integer;
			  Y : integer);
	port(output : out std_logic_vector(X-1 downto 0);
		  input  : in main_array(0 to Y-1)(natural(log2(real(Y)))+X-1 downto 0);
		  sel		: in std_logic_vector(natural(log2(real(Y))) downto 0));
end entity;

architecture m of multiplexer is
begin
		process(sel)
			variable num : integer;
		begin
			num := to_integer(unsigned(sel));
		end process;
	output <= input(num);
end m;